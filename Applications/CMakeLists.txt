ADD_EXECUTABLE(nrrdvtk nrrdvtk.cxx)
TARGET_LINK_LIBRARIES(nrrdvtk ${ITK_LIBRARIES})

ADD_EXECUTABLE(dwiprocess dwiprocess.cxx)
TARGET_LINK_LIBRARIES(dwiprocess ${ITK_LIBRARIES})

ADD_EXECUTABLE(labeltable labeltable.cxx)
TARGET_LINK_LIBRARIES(labeltable ${ITK_LIBRARIES})

ADD_EXECUTABLE(hfieldtodeformation  hfieldtodeformation.cxx)
TARGET_LINK_LIBRARIES(hfieldtodeformation TensorOperations DTIIO ${ITK_LIBRARIES})

ADD_EXECUTABLE(tio tio.cxx)
TARGET_LINK_LIBRARIES(tio ${ITK_LIBRARIES})

ADD_EXECUTABLE(morph morph.cxx)
TARGET_LINK_LIBRARIES(morph ${ITK_LIBRARIES})

macro(SEM_BUILD_EXECUTABLE)
  set(options )
  set( oneValueArgs NAME )
  set(multiValueArgs LIBRARIES )
  CMAKE_PARSE_ARGUMENTS(LOCAL
    "${options}"
    "${oneValueArgs}"
    "${multiValueArgs}"
    ${ARGN}
    )
#  Useful for debugging where executable and sharedlib modules will
#  be installed.
#  message(STATUS "NAME ${LOCAL_NAME}
#    ${STATIC}
#    TARGET_LIBRARIES ${LOCAL_LIBRARIES}
#    RUNTIME_OUTPUT_DIRECTORY ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}
#    LIBRARY_OUTPUT_DIRECTORY ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}
#    ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_ARCHIVE_OUTPUT_DIRECTORY}
#    INSTALL_RUNTIME_DESTINATION ${CLI_INSTALL_RUNTIME_DESTINATION}
#    INSTALL_LIBRARY_DESTINATION ${CLI_INSTALL_LIBRARY_DESTINATION}
#    INSTALL_ARCHIVE_DESTINATION ${CLI_INSTALL_ARCHIVE_DESTINATION}"
#  )
  SEMMacroBuildCLI(
    NAME ${LOCAL_NAME}
    ${STATIC}
    TARGET_LIBRARIES ${LOCAL_LIBRARIES}
    RUNTIME_OUTPUT_DIRECTORY ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}
    LIBRARY_OUTPUT_DIRECTORY ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}
    ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_ARCHIVE_OUTPUT_DIRECTORY}
    INSTALL_RUNTIME_DESTINATION ${INSTALL_RUNTIME_DESTINATION}
    INSTALL_LIBRARY_DESTINATION ${INSTALL_LIBRARY_DESTINATION}
    INSTALL_ARCHIVE_DESTINATION ${INSTALL_ARCHIVE_DESTINATION}
    )
endmacro()

##dtiprocess
set( MODULE_LIBRARIES ${ITK_LIBRARIES} TensorOperations DTIIO )
SEM_BUILD_EXECUTABLE( NAME dtiprocess BUILD_LIBRARY ${BUILD_TESTING} LIBRARIES ${MODULE_LIBRARIES} )
##dtiestim
set( MODULE_LIBRARIES DWIPrivateLibrary ${ITK_LIBRARIES} cephes )
SEM_BUILD_EXECUTABLE( NAME dtiestim BUILD_LIBRARY ${BUILD_TESTING} LIBRARIES ${MODULE_LIBRARIES} )
##scalartransform
set( MODULE_LIBRARIES DTIIO ${ITK_LIBRARIES} )
SEM_BUILD_EXECUTABLE( NAME scalartransform LIBRARIES ${MODULE_LIBRARIES} )
##fiberprocess
set( MODULE_LIBRARIES DTIIO ${ITK_LIBRARIES} )
SEM_BUILD_EXECUTABLE( NAME fiberprocess LIBRARIES ${MODULE_LIBRARIES} )
##dtiaverage
set( MODULE_LIBRARIES TensorOperations DTIIO )
SEM_BUILD_EXECUTABLE( NAME dtiaverage BUILD_LIBRARY ${BUILD_TESTING} LIBRARIES ${MODULE_LIBRARIES} )
##fibertrack
set( MODULE_LIBRARIES DTIIO TensorOperations ${ITK_LIBRARIES} )
SEM_BUILD_EXECUTABLE( NAME fibertrack LIBRARIES ${MODULE_LIBRARIES} )
##fiberstats
set( MODULE_LIBRARIES DTIIO )
SEM_BUILD_EXECUTABLE( NAME fiberstats LIBRARIES ${MODULE_LIBRARIES} )
##maxcurvature
set( MODULE_LIBRARIES ${ITK_LIBRARIES} )
SEM_BUILD_EXECUTABLE( NAME maxcurvature LIBRARIES ${MODULE_LIBRARIES} )

if(BUILD_dwiAtlas)
  ADD_SUBDIRECTORY(dwiAtlas)
  ADD_DEPENDENCIES(dwiAtlas dwiprocess DTIIO)
endif(BUILD_dwiAtlas)


