PROJECT(dwiAtlas)

FIND_PATH(BOOST_INCLUDE_DIR boost/config.hpp)

FIND_PATH(BOOST_LIBRARY_DIR boost_date_time-vc71-mt.lib)

LINK_DIRECTORIES(${BOOST_LIBRARY_DIR} ${DTIIO_LIBRARY_DIR})

INCLUDE_DIRECTORIES(${BOOST_INCLUDE_DIR} ${DWIProcess_SOURCE_DIR}/Library ${DWIProcess_SOURCE_DIR}/PrivateLibrary)

# Win32 has automatic linking of boost libraries so only add boost
# libaries on unix
IF(NOT WIN32 OR CYGWIN)
  SET(BOOST_LIBRARIES boost_program_options)
ENDIF(NOT WIN32 OR CYGWIN)

#FIND_PACKAGE ( ITK )
#IF ( ITK_FOUND )
#  INCLUDE(${ITK_USE_FILE})
#ELSE ( ITK_FOUND )
#  MESSAGE ( FATAL_ERROR "Cannot build without ITK" )
#ENDIF ( ITK_FOUND )

#FIND_PACKAGE(VTK)
#IF(VTK_FOUND)
#  INCLUDE(${VTK_USE_FILE})
#ELSE(VTK_FOUND)
#  MESSAGE(FATAL_ERROR
#  "VTK not found.  Please set VTK_DIR.")
#ENDIF(VTK_FOUND)

#FIND_PACKAGE(GenerateCLP REQUIRED)
#IF(GenerateCLP_FOUND)
#  INCLUDE(${GenerateCLP_USE_FILE})
#ENDIF(GenerateCLP_FOUND)

SET (dwiAtlas_SOURCE dwiAtlas.cxx)
GENERATECLP(dwiAtlas_SOURCE dwiAtlas.xml)

IF(NOT EXECUTABLE_OUTPUT_PATH)
      SET(EXECUTABLE_OUTPUT_PATH ${CMAKE_BINARY_DIR}/bin) 
ENDIF(NOT EXECUTABLE_OUTPUT_PATH)

ADD_EXECUTABLE(dwiAtlas dwiAtlas.cxx)

TARGET_LINK_LIBRARIES(dwiAtlas ITKCommon ITKAlgorithms ITKBasicFilters ITKIO DTIIO ${BOOST_LIBRARIES})


